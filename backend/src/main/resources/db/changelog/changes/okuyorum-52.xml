<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.4.xsd">

    <!-- Step 1: Add new columns -->
    <changeSet id="okuyorum-52-1" author="belkiz">
        <preConditions onFail="MARK_RAN">
            <and>
                <not>
                    <columnExists tableName="users" columnName="status"/>
                </not>
                <not>
                    <columnExists tableName="users" columnName="last_login_ip"/>
                </not>
                <not>
                    <columnExists tableName="users" columnName="failed_login_attempts"/>
                </not>
                <not>
                    <columnExists tableName="users" columnName="created_at"/>
                </not>
                <not>
                    <columnExists tableName="users" columnName="updated_at"/>
                </not>
            </and>
        </preConditions>

        <addColumn tableName="users">
            <column name="status" type="VARCHAR(255)"/>
            <column name="last_login_ip" type="VARCHAR(45)"/>
            <column name="failed_login_attempts" type="INTEGER"/>
            <column name="created_at" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="updated_at" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </addColumn>

        <rollback>
            <dropColumn tableName="users" columnName="status"/>
            <dropColumn tableName="users" columnName="last_login_ip"/>
            <dropColumn tableName="users" columnName="failed_login_attempts"/>
            <dropColumn tableName="users" columnName="created_at"/>
            <dropColumn tableName="users" columnName="updated_at"/>
        </rollback>
    </changeSet>

    <!-- Step 2: Set default values for existing records -->
    <changeSet id="okuyorum-52-2" author="belkiz">
        <preConditions onFail="MARK_RAN">
            <columnExists tableName="users" columnName="status"/>
        </preConditions>

        <sql>
            UPDATE users 
            SET status = COALESCE(status, 'ACTIVE'),
                failed_login_attempts = COALESCE(failed_login_attempts, 0),
                created_at = COALESCE(created_at, CURRENT_TIMESTAMP),
                updated_at = COALESCE(updated_at, CURRENT_TIMESTAMP)
            WHERE status IS NULL 
               OR failed_login_attempts IS NULL 
               OR created_at IS NULL 
               OR updated_at IS NULL;
        </sql>

        <rollback>
            <!-- No rollback needed as this is data modification -->
        </rollback>
    </changeSet>

    <!-- Step 3: Add NOT NULL constraints -->
    <changeSet id="okuyorum-52-3" author="belkiz">
        <preConditions onFail="MARK_RAN">
            <columnExists tableName="users" columnName="status"/>
        </preConditions>

        <addNotNullConstraint tableName="users" columnName="status" columnDataType="VARCHAR(255)"/>
        <addNotNullConstraint tableName="users" columnName="failed_login_attempts" columnDataType="INTEGER"/>
        <addNotNullConstraint tableName="users" columnName="created_at" columnDataType="TIMESTAMP WITHOUT TIME ZONE"/>
        <addNotNullConstraint tableName="users" columnName="updated_at" columnDataType="TIMESTAMP WITHOUT TIME ZONE"/>

        <rollback>
            <dropNotNullConstraint tableName="users" columnName="status"/>
            <dropNotNullConstraint tableName="users" columnName="failed_login_attempts"/>
            <dropNotNullConstraint tableName="users" columnName="created_at"/>
            <dropNotNullConstraint tableName="users" columnName="updated_at"/>
        </rollback>
    </changeSet>

    <!-- Step 4: Add check constraint and default values -->
    <changeSet id="okuyorum-52-4" author="belkiz">
        <preConditions onFail="MARK_RAN">
            <columnExists tableName="users" columnName="status"/>
            <not>
                <sqlCheck expectedResult="1">
                    SELECT COUNT(*) 
                    FROM pg_constraint 
                    WHERE conname = 'chk_users_status'
                </sqlCheck>
            </not>
        </preConditions>

        <sql splitStatements="false">
            ALTER TABLE users 
            ADD CONSTRAINT chk_users_status 
            CHECK (status IN ('ACTIVE', 'INACTIVE', 'SUSPENDED', 'BANNED'));
        </sql>

        <addDefaultValue tableName="users" columnName="status" defaultValue="ACTIVE"/>
        <addDefaultValue tableName="users" columnName="failed_login_attempts" defaultValue="0"/>
        <addDefaultValue tableName="users" columnName="created_at" defaultValueComputed="CURRENT_TIMESTAMP"/>
        <addDefaultValue tableName="users" columnName="updated_at" defaultValueComputed="CURRENT_TIMESTAMP"/>

        <rollback>
            <dropDefaultValue tableName="users" columnName="status"/>
            <dropDefaultValue tableName="users" columnName="failed_login_attempts"/>
            <dropDefaultValue tableName="users" columnName="created_at"/>
            <dropDefaultValue tableName="users" columnName="updated_at"/>
            <sql>ALTER TABLE users DROP CONSTRAINT IF EXISTS chk_users_status;</sql>
        </rollback>
    </changeSet>

    <changeSet id="20250410-fix-null-counts" author="belkizozbek">
        <update tableName="users">
            <column name="followers" valueNumeric="0"/>
            <where>followers IS NULL</where>
        </update>
        <update tableName="users">
            <column name="following" valueNumeric="0"/>
            <where>following IS NULL</where>
        </update>
        <update tableName="users">
            <column name="books_read" valueNumeric="0"/>
            <where>books_read IS NULL</where>
        </update>
        <update tableName="users">
            <column name="reader_score" valueNumeric="0"/>
            <where>reader_score IS NULL</where>
        </update>
    </changeSet>

</databaseChangeLog> 